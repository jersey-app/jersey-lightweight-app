buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath (group: 'com.sahlbach.gradle', name: 'gradle-jetty-eclipse-plugin', version: '1.9.+')
    }
}

project.ext {
    clientProjects = project(":").subprojects.findAll { it.name.endsWith('-client') }
    resourceProjects = project(":").subprojects.findAll { it.name.endsWith('-resource') }
    webProjects = project(":").subprojects.findAll { it.name.endsWith('-web') }
}


allprojects {
    apply plugin: 'idea'
}

idea {
    project {
        jdkName = JavaVersion.VERSION_1_7
        languageLevel = JavaVersion.VERSION_1_7

        ipr.withXml { xml ->
            def mapping = xml.node.component.find { it.@name == "VcsDirectoryMappings" }.mapping
            mapping.@vcs = 'Git'
            mapping.@directory = '$PROJECT_DIR$'
        }
    }
}


subprojects {
    apply plugin: 'java'
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    project.ext {
        guavaVersion = '18.0'
        jodaTimeVersion = '2.4'
        servletVersion = '2.5'
        jacksonVersion = '2.4.2'
        jerseyVersion = '2.12'
        hk2Version = '2.4.0-b01'

        junitVersion = '4.11'
        hamcrestVersion = '1.3'
        mockitoVersion = '1.9.5'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xlint:deprecation"
        options.encoding = "UTF-8"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile(
                "com.google.guava:guava:$guavaVersion",
                "joda-time:joda-time:$jodaTimeVersion",
                "org.glassfish.hk2:hk2-api:$hk2Version"
        )

        testCompile(
                "junit:junit:$junitVersion",
                "org.hamcrest:hamcrest-library:$hamcrestVersion",
                "org.mockito:mockito-core:$mockitoVersion"
        )
    }
}

configure(clientProjects) {

}

configure(resourceProjects) {
    ext {
        servletVersion = '2.5'
    }

    dependencies {
        compile(
                clientProjects,
                "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion",
                "com.fasterxml.jackson.datatype:jackson-datatype-guava:$jacksonVersion",
                "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
        )
    }
}

configure(webProjects) {
    apply plugin: 'jettyEclipse'
    apply plugin: 'war'

    ext {
    }

    dependencies {
        compile resourceProjects
        compile(
                "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
        )

        runtime(
                "org.glassfish.jersey.containers:jersey-container-servlet-core:$jerseyVersion"
        )
    }
}
